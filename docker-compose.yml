services:
  backend:
    build:
      context: ./Backend_memoire
      dockerfile: Dockerfile
    container_name: laravel-backend
    restart: unless-stopped
    environment:
      - APP_ENV=production
      - DB_HOST=mysql-db
      - DB_DATABASE=backend_memoire
      - DB_USERNAME=root
      - DB_PASSWORD=passer
    volumes:
      - ./Backend_memoire/storage:/var/www/storage
    depends_on:
      - mysql
    networks:
      - app-network

  frontend:
    build:
      context: ./Frontend-memoire
      dockerfile: Dockerfile
    container_name: angular-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: mysql-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: passer
      MYSQL_DATABASE: backend_memoire
      MYSQL_USER: laravel
      MYSQL_PASSWORD: passer
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - app-network
      
  sonarqube:
    image: sonarqube:lts-community
    container_name: sonarqube-server
    restart: unless-stopped
    environment:
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: true
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_temp:/opt/sonarqube/temp
    networks:
      - app-network

  
volumes:
  mysql_data:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_temp:  
networks:
  app-network:
    driver: bridge

  